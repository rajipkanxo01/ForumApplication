@page "/Register"
@using HTTPClients.ClientInterfaces
@using global::Shared.DTOs
@inject IUserService UserService;
@inject NavigationManager NavMgr;


<div class="container-fluid">
    <div class="row no-gutter">
        @* image side *@
        <div class="col-md-6 d-flex">
            <img src="images/signup_background.png" alt=""/>
        </div>

        @* form half *@
        <div class="col-md-6 bg-light">
            <div class="align-items-center py-5">
                <div class="container">
                    <div class="row">
                        <div class=" col-10 mx-auto">
                            <h3 class="display-4">Sign Up</h3>
                            <p class="text-muted mb-4">Create an account to register</p>
                        </div>

                        <div class=" mb-3 w-75">
                            <input type="text" @bind="username" placeholder="Type username" class="form-control rounded-pill border-0 shadow-sm px-4 "/>
                        </div>

                        <div class=" mb-3 w-75">
                            <input type="text" @bind="password" placeholder="Type password" class="form-control rounded-pill border-0 shadow-sm px-4 "/>
                        </div>

                        <div class="mb-3 w-75">
                            <input type="text" @bind="repeatPassword" placeholder="Type password again" class="form-control rounded-pill border-0 shadow-sm px-4 "/>
                        </div>

                        <div class="mb-3 w-100 mx-5">
                            <button type="submit" @onclick="CreateAsync" class="row btn btn-primary btn-block text-uppercase mb-2 rounded-pill shadow-sm w-25">Register</button>
                        </div>

                        @if (!string.IsNullOrEmpty(errorLabel))
                        {
                            <div class="field">
                                <label style="color: red">
                                    @errorLabel
                                </label>
                            </div>
                        }

                        <div class="text-center d-flex justify-content-between mt-4 ">
                            <p>
                                Already a member?
                                <a href="@ChangeToLogin" class="font-italic justify-content-between mt-4">
                                    <u>Login Here </u>
                                </a>
                            </p>
                        </div>


                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string username;
    private string password;
    private string repeatPassword;
    private string errorLabel;

    private async Task CreateAsync()
    {
        errorLabel = "";

        if (password.Equals(repeatPassword))
        {
            try
            {
                await UserService.RegisterUserAsync(new UserDto
                {
                    Username = username,
                    Password = password
                });
                NavMgr.NavigateTo("/Login");
            }
            catch (Exception e)
            {
                errorLabel = $"Error: {e.Message}";
                Console.WriteLine(e);
            }
        }
        else
        {
            errorLabel = "Password and Repeat Password must be same!!!!";
        }
    }

    private async Task ChangeToLogin()
    {
        NavMgr.NavigateTo("/Login");
    }

}